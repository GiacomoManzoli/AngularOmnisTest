{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/OmnisCallbackObject.ts","webpack:///src/OmnisWrapper.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/mock-heroes.ts","webpack:///src/environments/environment.ts","webpack:///src/jOmnisHotSwap.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","OmnisCallbackObject","jOmnisWrapper","console","info","sendEvent","params","log","JOmnisWrapper","jOmnis","callbackObject","swappableOmnis","callbackHotSwap","evName","evData","callId","omnisCallbackName","message","evType","data","JSON","stringify","callback","sendControlEvent","warn","anyWindow","window","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","HeroesComponent","heroes","hero","selectedHero","HEROES","name","environment","production","OmnisCallbackObjectDummy","onLoadFired","onWebSocketOpenedFired","newCallback","oldCallback","omnisOnLoad","omnisOnWebSocketOpened","error","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { JOmnisWrapper } from './OmnisWrapper';\n\n// TODO: define the Omnis Interface\n\nexport class OmnisCallbackObject {\n  public jOmnisWrapper: JOmnisWrapper;\n\n  constructor(jOmnisWrapper: JOmnisWrapper) {\n    this.jOmnisWrapper = jOmnisWrapper;\n  }\n\n  omnisOnLoad() {\n    console.info(\n      ` Omnis interface loaded. Waiting for the communication link...`\n    );\n  }\n\n  omnisOnWebSocketOpened() {\n    console.info(` web socket opened`);\n    this.jOmnisWrapper.sendEvent('ev_Ready');\n  }\n\n  omnisSetData(params) {\n    console.log('omnisSetData', params);\n  }\n\n  omnisGetData(params) {\n    console.log('omnisGetData', params);\n  }\n}\n","import { OmnisCallbackObject } from './OmnisCallbackObject';\nexport interface OSMessage {\n  evType: string;\n  callId: number;\n  data?: string;\n  callback?: string;\n}\n\nexport class JOmnisWrapper {\n  jOmnis: JOmnis;\n\n  constructor(jOmnis: JOmnis) {\n    this.jOmnis = jOmnis;\n\n    //\n    const callbackObject = new OmnisCallbackObject(this);\n\n    // Set's the right callback object\n    const swappableOmnis = jOmnis as JOmnisSwappable;\n    swappableOmnis.callbackHotSwap(callbackObject);\n  }\n\n  /**\n   * Wrapps jOmnis.sendControlEvent.\n   * @param {String} evName Nome dell'evento, tipicamente ha un prefisso \"ev\"\n   * @param {Object | String} [evData] [OPZIONALE] Dati dell'evento come oggetto o come JSON.stringify\n   * @param {Number} [callId] [OPZIONALE] Id della chiamata alla quale risponde l'evento\n   * @param {String} [omnisCallbackName] [OPZIONALE] Nome del metodo di callback di Omnis\n   */\n  sendEvent(\n    evName: string,\n    evData?: string | any,\n    callId?: number,\n    omnisCallbackName?: string\n  ) {\n    console.info(`[jOmnis] sendEvent ${evName}`, evData);\n    var message: OSMessage = {\n      evType: evName,\n      callId: callId && callId !== 0 ? callId : 0,\n    };\n    if (evData) {\n      message.data =\n        typeof evData === 'string' ? evData : JSON.stringify(evData);\n    }\n    if (omnisCallbackName) {\n      message.callback = omnisCallbackName;\n    }\n    jOmnis.sendControlEvent(message);\n  }\n}\n","import { Component } from '@angular/core';\nimport { JOmnisWrapper } from 'src/OmnisWrapper';\n\nconsole.warn('jOmnis?', jOmnis);\n\n// This isn't ideal: it saves the wrapper as a global variable\n// i think that it should wrapped around a Service or something Observable\n// (i'm no Angular expert, i just had a quick look at the docs)\nlet anyWindow = window as any;\nanyWindow.jOmnisWrapper = new JOmnisWrapper(jOmnis);\n\nconsole.warn('jOmnisWrapper', anyWindow.jOmnisWrapper);\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n","<h1>{{ title }}</h1>\n<app-heroes></app-heroes>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { AppComponent } from './app.component';\n\nimport { HeroesComponent } from './heroes/heroes.component';\n\n@NgModule({\n  declarations: [AppComponent, HeroesComponent],\n  imports: [BrowserModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\n\nimport { HEROES } from '../mock-heroes';\nimport { JOmnisWrapper } from 'src/OmnisWrapper';\n\n// NO, Giacomo! you can't do that here, this is executed before Omnis starts\n// const jOmnisWrapper = window['jOmnisWrapper'] as JOmnisWrapper;\n// console.warn('jOmnisWrapper', jOmnisWrapper);\nlet jOmnisWrapper;\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css'],\n})\nexport class HeroesComponent implements OnInit {\n  heroes = HEROES;\n  selectedHero: Hero;\n\n  constructor() {\n    jOmnisWrapper = window['jOmnisWrapper'] as JOmnisWrapper;\n    console.warn('jOmnisWrapper', jOmnisWrapper);\n  }\n\n  ngOnInit(): void {}\n\n  onSelect(hero: Hero): void {\n    this.selectedHero = hero;\n    jOmnisWrapper.sendEvent('ev_HeroSelected', hero);\n  }\n}\n","<h2>My Heroes</h2>\n<ul class=\"heroes\">\n  <li\n    *ngFor=\"let hero of heroes\"\n    (click)=\"onSelect(hero)\"\n    [class.selected]=\"hero === selectedHero\"\n  >\n    <span class=\"badge\">{{ hero.id }}</span> {{ hero.name }}\n  </li>\n</ul>\n\n<div *ngIf=\"selectedHero\">\n  <h2>{{ selectedHero.name | uppercase }} Details</h2>\n  <div><span>id: </span>{{ selectedHero.id }}</div>\n  <div>\n    <label\n      >name:\n      <input [(ngModel)]=\"selectedHero.name\" placeholder=\"name\" />\n    </label>\n  </div>\n</div>\n","import { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 11, name: 'Dr Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' },\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","class OmnisCallbackObjectDummy {\n  onLoadFired: boolean;\n  onWebSocketOpenedFired: boolean;\n\n  constructor() {\n    this.onLoadFired = false;\n    this.onWebSocketOpenedFired = false;\n  }\n  omnisOnLoad() {\n    this.onLoadFired = true;\n    console.log('OmnisCallbackObjectDummy: onLoad');\n  }\n\n  omnisOnWebSocketOpened() {\n    this.onWebSocketOpenedFired = true;\n    console.log('OmnisCallbackObjectDummy: onWebSocketOpened');\n  }\n}\n\nif (window['jOmnis']) {\n  jOmnis.callbackObject = new OmnisCallbackObjectDummy();\n  jOmnis.callbackHotSwap = function (newCallback) {\n    var oldCallback = this.callbackObject;\n    this.callbackObject = newCallback;\n    if (oldCallback.onLoadFired) {\n      this.callbackObject.omnisOnLoad();\n    }\n    if (oldCallback.onWebSocketOpenedFired) {\n      this.callbackObject.omnisOnWebSocketOpened();\n    }\n  };\n} else {\n  console.error('ERROR: jOmnis not defined');\n  //throw new Error('jOmnis non definito!');\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// Some paranoid code to avoid troubles with Omnis\nimport './jOmnisHotSwap';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}